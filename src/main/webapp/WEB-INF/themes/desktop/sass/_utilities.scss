/*doc
---
title: utilities.scss
name: utilities
category: Files
---
  This file has wombat specific mixins and extensible styles
  and ties in with plos-themes and setting each journal color
*/


//compass overides

$default-border-radius: $border-radius-default;
// that name space convention in compass just really bugs me.

// color mixin:
@mixin highlight-color($clr-highlight: $plos-default) {
  color: $clr-highlight;
}

@mixin highlight-background($clr-highlight: $plos-default,
$clr-highlight-hover: $plos-default,
$clr-highlight-text: $white) {
  background: $clr-highlight;
  color: $clr-highlight-text;
  &:hover {
    background: $clr-highlight-hover;
  }
}

@mixin highlight-border($clr-highlight: $plos-default, $width: 6px, $position: bottom) {

  @if $position == bottom {
    border-bottom: $width solid $clr-highlight;
  } @else if $position == left {
    border-left: $width solid $clr-highlight;
  } @else if $position == right {
    border-left: $width solid $clr-highlight;
  } @else if $position == top {
    border-top: $width solid $clr-highlight;
  }
}

// color extensibles

/*doc
---
title: Colors
name: color
category: utilities
---

`brand color` refers to the journal colors

`highlight color` refers to the default highlight color - in our case it is `plos-blue`

example | extension
--------|----------
<p class="example-bg-dark">I have a dark background</p> | `@extend %bg-dark`
<p class="example-highlight-color">My text is the highlight color</p> | `@extend %highlight-color`
<a class="example-highlight-background">I have a highlighted background - hover over me</a> | `@extend %highlight-background`
<p class="example-highlight-border">I have a highlighted border </p> | `@extend %highlight-border`
<p class="example-brand-color">My text is the brand color</p> | `@extend %brand-color`
<p class="example-brand-background">I have a branded background - hover over me</p> | `@extend %brand-background`
<p class="example-brand-border">I have a branded border </p> | `@extend %brand-border`


*/

%bg-dark {
  background: $grey-dark;
}

%highlight-color {
  color: $clr-highlight;
}

%highlight-background {
  background: $clr-highlight;
  color: $clr-highlight-text;
  &:hover {
    background: $clr-highlight-hover;
  }
}

%highlight-border {
  border-color: $clr-highlight;
}
///////
//branding
/////



@mixin brandColor($setColor: $plos-default ) {
  %more-icon {
    color: $setColor;
  }
  %brand-color {
    color: $setColor;
  }
  %brand-border {
    border-color: $setColor;
  }
  %brand-background {
    background-color: $setColor;
  }
  %brand-background-hover {
    background-color: $setColor;
    &:hover {
      background-color: $plos-default;
    }
  }
  //color shading variations on adjacent box headers
  %brand-shading {
    &:first-child {
      .block-header {
        background-color: darken($setColor, 18%);
      }
      .jcarousel-prev,
      .jcarousel-next {
        color: darken($setColor, 18%);
        &:hover {
          color: $plos-default;
        }
      }
    }
    &:first-child + .carousel-wrap {
      .block-header {
        background-color: darken($setColor, 13%);
      }
      .jcarousel-prev,
      .jcarousel-next {
        color: darken($setColor, 13%);
        &:hover {
          color: $plos-default;
        }
      }
    }
  }
}

// set the journal-specific colors - PS this is a good example of things that can be pulled into themes or a separate scss file when the maven sass compiler is installed & working
.plosbiology, .ploscompbiol, .plosgenetics {
  @include brandColor($setColor: $plos-bio);
}
.plosmedicine, .plospathogens, .plosntd {
  @include brandColor($setColor: $plos-med);
}

.ploscollections, .plosclinicaltrials {
  @include brandColor($setColor: $plos-default);
}
.plosone {
  @include brandColor($setColor: $plos-one);
}

//////////////
// layout utilities
//////////////

/*doc
---
title: layout utilities
name: layout
category: utilities
---

example | extension
--------|----------
<p class="center-simple" style="width: 50%">I have am centered in the middle</p> | `@extend .center-simple`
<p class="pad-xsmall-x">I have a small amount of padding ???? we dont' use this much, should we? </p> | `@extend .pad-xsmall-x`
<div class="example-border-radius">I have a border radius</div> | ` @include border-radius()`
<div class="example-border-radius-large">I have a large border radius</div> | ` @include border-radius($border-radius-large)`
<div class="example-box-shadow">I have box-shadow</div> | ` @include box-shadow()`

*/


.center-simple {
  margin: 0 auto;
}

.pad-xsmall-x{
  padding: 0 $pad-default;
}
//
// You need to use :before pseudo selector like this:
//  .DIV_THAT_NEEDS_OVERLAY:before{
//    @extend .overlay;
//    background: OVERLAY DETAILS
//  }
//
.overlay {
  background-position: bottom;
  content: " ";
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

/*doc
---
title: interaction and animation utilities
name:  animation
category: utilities
---

example | extension
--------|----------

*/


// Hide elements so we dont' get a flash of unstyled content
[data-visibility= 'none']{@extend .hide;}
[data-js-tooltip=tooltip_trigger]:focus{outline: 0;}



$zindex: (
  modal     : 9000,
  overlay   : 8000,
  topVisible: 7000,
  crossmark-tooltip: 6999,
  dropdown  : 6998,
  header    : 6000,
  footer    : 5000,
  invisible : -1,

);
/* zindex map use example
.header {
  z-index: map-get($zindex, header);
}
*/
