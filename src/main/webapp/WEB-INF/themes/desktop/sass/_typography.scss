/*doc
---
title: typography.scss
name: typography
category: Files
---
 type styles including sizes and vertical spacing
*/

@include font-face("albert", font-files("fs_albert.ttf", "fs_albert.otf", "fs_albert.svg", "fs_albert.woff"));

@include font-face("albert-bold", font-files("fs_albert-bold-webfont.ttf", "fs_albert-bold-webfont.otf", "fs_albert-bold-webfont.svg", "fs_albert-bold-webfont.woff"));

@include font-face("FontAwesome", font-files("fontawesome-webfont.ttf", "FontAwesome.otf", "fontawesome-webfont.svg", "fontawesome-webfont.woff"));

p {
  word-wrap: break-word;
}

sup, sub {
  vertical-align: 0;
  position: relative;
}

sub {
  top: $sub-alignment;
}

sup {
  bottom: $sup-alignment;
}

/*doc
---
title: other text styles
name: other
category: typography
---
Other text-styles

example | extension
--------|----------
<p class="example-condense">I am condensed</p> | `@extend %condense`




*/

/*doc
---
title: header styles
name: header styles
category: typography
---

we want to use semantic headers - a logical flow of `h1`, `h2`, `h3` etc...

example | extension
--------|----------
<p class="example-header-allcaps">I am all caps and fancy</p> | `@extend %header-allcaps`
<p class="example-header-allcaps-plain">I am all-caps but plain </p> | `@extend %header-allcaps-plain`
<p class="example-header-allcaps-xlarge">I am x-large</p> | `@extend %header-allcaps-xlarge`
<p class="example-brand-title">I am the color of the journal</p> | `@extend %brand-title`

*/

/* basic styles  */
@mixin text-default{
  font-size: rem-calc($txt-size-default);
  line-height: rem-calc($line-height);
}
@mixin text-below{margin-bottom: $paragraph-spacing;}
@mixin default-list{
  li{
    @include text-default;
    @include text-below;
  }
}

ol {
  padding-left: $pad-default;
  @include default-list;
}
/// this should be used on a ul but I wanted to make it extensible
.list-bullet {
  list-style-type: none;
  > li {
    padding-left: $pad-default;
    margin-bottom: rem-calc($line-height-small);
    position: relative;
  }
  > li:before {
    @extend .fa;
    @extend .fa-chevron-right;
    @extend .list-icon;
    content: "\f054";
    font-size: rem-calc(10);
    display: inline-block;
    margin-left: rem-calc(-17);
  }
  // to do put in variables
}
.list-bullet-over-ride{
  li:before{
    content: none;
    font-size: inherit;
    display: inline-block;
    margin-left: 0;
    position: relative;
  }
}
.bulleted {@extend .list-bullet;}    /// used for article pages
.list-no-bullet{
  margin-left: 0;
  list-style-type: none;
  @include default-list;

}

/// sizes are set in foundation.
h2, h3, h4, h5 {
  font-family: $font-face-plain;
}

// font-weights
h3, h5 {
  font-weight: bold;
}

h4 {
  font-weight: normal;
}

//spacing
h2, h3, h4, h5 {
  margin-bottom: rem-calc($line-height-small);
  margin-top: rem-calc($line-height-medium);
  line-height: normal;
}

h2 {
  margin-bottom: rem-calc($line-height);
  font-size: rem-calc($txt-size-h2);
  font-weight: normal;
}

h3 {
  margin-bottom: rem-calc($txt-margin-bottom-h3);
  margin-top: rem-calc($txt-margin-top-h3);
}

h4, h5 {
  margin-top: rem-calc($line-height-small);
}

//special styles

.title-small {
  font-size: $txt-size-default;
  font-weight: bold;
}

//callout styles

@mixin callout($margin-top: rem-calc($line-height-medium),
$margin-bottom: rem-calc($line-height),
$padding-x: rem-calc($line-height),
$padding-y: $pad-default,
$icon-type: 'none',
$icon-width: $pad-medium) {
  margin: $margin-top 0 $margin-bottom 0;
  padding: $padding-x $padding-y;
  @include text-default;
  @if $icon-type != 'none' {
    padding-left: ($padding-x + $icon-width);
    position: relative;

    &:after {
      @extend .icon-#{$icon-type};
      display: block;
      position: absolute;
      left: $padding-x;
      top: ($padding-y - rem-calc(2));
      line-height: 1 !important;
    }
  }
}

//////////
// BLOCKS AND CALLOUTS
//////////

%callout-default {
  @include callout();
}

.block-quote {
  @extend blockquote; //for lemur
}

blockquote, .pullquote, .block-quote {
  @include text-default;
  border-left: $pad-xsmall solid $clr-separator;
  margin: rem-calc($line-height-medium 0 $line-height 0);
}

.pullquote {
  @extend blockquote;
  font-style: italic;
}

.block-basic {
  @include callout();
  background: $clr-callout-bg;
}

.block-global-alert {
  @extend %callout-default;
  background: $plos-default-shade1;
  font-weight: bold;
}

.block-aperta {
  @extend .block-global-alert;
  background: $clr-aperta;
}

.block-tip {
  @include callout($icon-type: 'pointer');
}

.block-important {
  @include callout($icon-type: 'important');
  background: $clr-alert;
}

.block-more-information {
  @include callout($icon-type: 'info');
  background: $clr-callout-bg;
}

%brand-title {
  @extend %header-allcaps;
  @extend %brand-color;
  margin-bottom: $pad-small;
}

%brand-header {
  @extend %brand-background;
  color: $clr-highlight-text;
  padding: 0 $pad-default;
  font-family: $font-face-fancy;
  font-size: rem-calc($txt-size-medium-large);
  line-height: $pad-large;
}

/*doc
---
title: link styles
name: link styles
category: typography
---

in most cases you can leave the a tag alone but in some cases we need to manipulate the link behaviour. these also work when they are added to the parent tag like the `p` or `div`.

example | extension
--------|----------
<a class="example-link">I don't have an underline but I still turn the default color<a> | `@extend %link-text-body`
<a class="example-link-text-white">I am a white link<a> | `@extend %link-text-white`


### mixin
`@mixin link-text($color, $color-hover, $decoration-hover, $decoration-text)`
 `$decoration-hover` sets the hover style:

 option  | result
 -----------|------------------
 `$decoration-hover:none` | there is NO underline and the text turns the highlight color
 `$decoration-hover:underline` | text stays the same color but has an underline

  `$color-hover` will set the color on hover *only if* `$decoration-hover` is underline
  (to preserve backwards compatibility).
*/
@mixin link-text($color: $clr-body-text, $color-hover: none, $decoration-hover: none, $decoration-text: none) {
  color: $color;
  text-decoration: $decoration-text;

  &:hover, a:hover {
    @if $decoration-hover == none {
      color: $plos-default;
      text-decoration: none;
    } @else if $decoration-hover == underline {
      @if $color-hover != none {
        color: $color-hover;
      } @else {
        color: $color;
      }
      text-decoration: underline;
    }
  }
}

%link-text-body, %link-text-body a {
  //TODO- should this be link text home?
  @include link-text();
}

%link-text-white, %link-text-white a {
  @include link-text($color: $white, $decoration-hover: underline);
}

%link-text-underline, %link-text-underline a {
  @include link-text($decoration-hover: underline);
}

%link-text-default, %link-text-default a {
  @include link-text($color: $plos-default, $decoration-hover: underline);
}

//////////////
//font decorations and JATS tags
///////////////


.type{
  font-weight:bold;
  &:after{content: ':'}
}


%small-italic {
  font-size: rem-calc($txt-size-xxxsmall);
  font-style: italic;
}

%condense {
  letter-spacing: -0.5px;
}

%txt-transform {
  text-transform: uppercase;
}

.inline-intro {
  font-weight: bold;
}

.no-margin {
  margin-bottom: 0;
}

.small-caps {
  font-variant: small-caps;
}

.monospace {
  font-family: $font-face-monospace;
}
.roman {
  font-family: $font-face-roman;
}
.sans-serif {
  font-family: $font-face-sans-serif;
}




//////////////
//form styles
///////////////

@mixin input-placeholder-color($color: $clr-input-placeholder) {
  ::-webkit-input-placeholder {
    color: $color;
  }
  :-moz-placeholder {
    /* Firefox 18- */
    color: $color;
  }
  ::-moz-placeholder {
    /* Firefox 19+ */
    color: $color;
  }
  :-ms-input-placeholder {
    color: $color;
  }
}

//////////////
//font-sizes styles
///////////////

/*doc
---
title: note
name: note
category: typography
---

This is one place not to use @extend, since this is a semantic class name

```html_example
           <p class="note">This is a note</p>
          <p class="caption">this is a caption</p>
          <figcaption>This is a figcaption</figcaption>
 ```

*/

.note, .caption, figcaption {
  color: $grey-med-light;
}

/////////
/// table styles
////////

%table-fancy {
  @include table; //from foundation
  border-collapse: collapse;
  width: 100%;
}

table.table-basic {
  @extend %table-fancy;
  border-width: 0;

  thead th {
    border-bottom: $table-separator-header;
  }

  tbody td {
    border-bottom: $table-separator;
  }

  tbody tr:last-child td {
    border-bottom: 0
  }
}

table.table-borders {
  @extend %table-fancy;
  border: $table-separator;

  td, th {
    border: $table-separator;
  }

  thead th {
    border-bottom: $table-separator-header;
  }
}

table.table-zebra-stripes {
  @extend %table-fancy;
  border-width: 0;

  td, th {
    border-left: $table-separator-width solid $clr-body-bg;
  }

  tr {
    background: $grey-light;
  }

  tr {
    &.even,
    &.alt,
    &:nth-of-type(even) {
      background: $grey-med-light;
    }
  }

  thead tr th {
    background: $grey-med-dark;
    color: $clr-body-bg;
  }
}

/////////
/// homepage font styles
////////

%home-subheader {
  line-height: 1;
  color: $grey-dark;
  font-weight: normal;
  margin-top: .2rem;
  margin-bottom: .2rem;
  @extend %link-text-body;
}

%header-allcaps {
  font-size: rem-calc($txt-size-medium);
  font-family: $font-face-fancy;
  @extend %txt-transform;
}

%header-allcaps-plain {
  @extend %header-allcaps;
  font-family: $font-face-plain;
}

%header-allcaps-xlarge {
  @extend %header-allcaps;
  font-size: rem-calc($txt-size-xlarge);
}

%header-medium-bold {
  font-size: rem-calc($txt-size-medium);
  font-family: $font-face-fancy;
  font-weight: bold;
}

%header-xlarge-light {
  font-size: rem-calc($txt-size-xlarge);
  color: $clr-light-text;
  font-family: $font-face-fancy;
}

%header-xxlarge {
  font-size: rem-calc($txt-size-xxlarge);
  font-family: $font-face-fancy;
}

%header-bottom-shadow {
  padding-bottom: rem-calc(17);
  margin-bottom: rem-calc(17);
  box-shadow: $default-header-shadow;
  text-align: center;
}

.header-allcaps-smallest {
  @extend %header-allcaps-plain;
  font-size: rem-calc($txt-size-xxxsmall);
}

